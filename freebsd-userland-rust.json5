// This Packer Template requires JSON5 support in packer(1) or the cfgt(1)
// utility.
//
// USAGE with unpatched packer: cfgt -i freebsd.json5 | packer build -
// USAGE with patched packer: packer build freebsd.json5
//
// packer w/ JSON5 support: https://github.com/sean-/packer/tree/f-json5
// cfgt: go get -u github.com/sean-/cfgt
{
    variables: {
        // Environment variables pulled from `triton env` or `triton env $(PROFILE_NAME)`
        triton_account: "{{ env `SDC_ACCOUNT` }}",
        triton_key_id: "{{ env `SDC_KEY_ID` }}",
        triton_key_material_path: "{{ env `SDC_KEY_MATERIAL_PATH` }}",
        triton_url: "{{ env `SDC_URL` }}",
        triton_image_name: "freebsd-userland-rust",
        triton_image_version: "1.0.0",
    },

    builders: [
        {
            type: "triton",

            triton_url: "{{ user `triton_url` }}",
            triton_account: "{{ user `triton_account` }}",
            triton_key_id: "{{ user `triton_key_id` }}",
            triton_key_material: "{{ user `triton_key_material_path` }}",

            source_machine_name: "{{ user `triton_image_name` }}-builder",

            // Value from the NAME column output from `make triton-packages`
            source_machine_package: "k4-highcpu-kvm-750M",

            // Value from the ID column output from `make triton-freebsd-images`
            source_machine_image: "d13bd654-41bb-11e7-a64c-b76d805afedf",

            // Value from the ID column output from `make triton-networks`
            source_machine_networks: [
                "42325ea0-eb62-44c1-8eb6-0af3e2f83abc",
            ],

            ssh_username: "root",
            ssh_private_key_file: "{{ user `triton_key_material_path` }}",

            image_name: "{{ user `triton_image_name` }}",
            image_version: "{{ user `triton_image_version` }}",
        },
    ],

    provisioners: [
        { // Clean up the base FreeBSD image
            type: "shell",
            inline: [
                // Log the version of the builder image
                "/usr/bin/uname -a",

                // Enable async IO for provisioning
                "/sbin/mount -u -o async,noatime /",

                // Remove all packages
                "/usr/bin/env ASSUME_ALWAYS_YES=yes /usr/local/sbin/pkg-static remove -a -f",

                // Update via freebsd-update(1)
                "/usr/sbin/freebsd-update --not-running-from-cron fetch",
                "/usr/sbin/freebsd-update install || /usr/bin/true",
                "/bin/date '+0 %k * * * root /usr/sbin/freebsd-update cron' | /usr/bin/tee -a /etc/crontab",

                // Shoot sendmail(8)
                "/usr/sbin/sysrc sendmail_enable=NONE",
                "/usr/sbin/service sendmail onestop",

                // Re-bootstrap pkg(1)
                "/usr/bin/env ASSUME_ALWAYS_YES=yes /usr/sbin/pkg bootstrap -N",

                // Update and install package auditing
                "/usr/local/sbin/pkg-static update -f",  // Update the FreeBSD package database
                "/usr/local/sbin/pkg-static upgrade -y", // Update any out of date packages
                "/usr/local/sbin/pkg-static audit -F",   // Install vulnerability database

                // Mandatory packages for triton
                "/usr/local/sbin/pkg-static install -y shells/bash",

                // Mandatory packages for administration
                "/usr/local/sbin/pkg-static install -y net/mosh net/openntpd sysutils/runit sysutils/tmux",

                // OpenNTPd configuration
                "/usr/bin/sed -i.bak -e 's%^servers.*%#servers pool.ntp.org%' /usr/local/etc/ntpd.conf",
                "/usr/bin/printf 'server 0.freebsd.pool.ntp.org\nserver 1.freebsd.pool.ntp.org\nserver 2.freebsd.pool.ntp.org\nserver 3.freebsd.pool.ntp.org\n' | /usr/bin/tee -a /usr/local/etc/ntpd.conf",
                "/usr/sbin/service ntpd stop",
                "/usr/sbin/sysrc ntpd_enable=NO",
                "/usr/sbin/sysrc openntpd_enable=YES",
                "/usr/sbin/service openntpd start",

                "/usr/sbin/sysrc clear_tmp_enable=YES",

                "/usr/sbin/pw groupadd _log -g 899",
                "/usr/sbin/pw useradd _log -u 899 -g _log",
                "/usr/sbin/sysrc runsvdir_enable=YES",
                "/usr/sbin/sysrc runsvdir_path=/var/service",
            ],
        },

        {
            type: "file",
            source: "rust-Makefile.patch",
            destination: "/tmp/rust-Makefile.patch",
        },

        { // Install Rust userland utilities (coreutils and findutils)
            type: "shell",
            inline: [
                // Log the version of the builder image
                "/usr/local/sbin/pkg-static install -y devel/cargo devel/git devel/gmake lang/rust",
                "/usr/local/bin/git clone https://github.com/uutils/coreutils.git",
                "/usr/local/bin/git clone https://github.com/uutils/findutils.git",
                "/usr/bin/patch < /tmp/rust-Makefile.patch",

                "/usr/local/bin/gmake -C coreutils/ SKIP_UTILS='ls stat who' install PREFIX=/usr/obj",
                "/bin/sh -c 'cd findutils && cargo build --release'",
                "/bin/sh -c 'cd findutils && cargo install --root=/usr/obj'",

                // Install find(1)
                "/bin/sh -c 'cd findutils && cargo install --root=/usr --bin find --force'",

                // Install coreutils: new /bin
                // ls -1 /usr/obj/bin | xargs -n1 -I% ls -1 /bin/% | & grep -v No | cut -d '/' -f 3
                "/bin/echo \
                     cat      \
                     chmod    \
                     cp       \
                     echo     \
                     expr     \
                     hostname \
                     kill     \
                     link     \
                     ln       \
                     mkdir    \
                     mv       \
                     pwd      \
                     realpath \
                     rm       \
                     rmdir    \
                     sleep    \
                     sync     \
                     test     \
                     unlink   \
                 | /usr/bin/xargs -n1 -I% \
                     /usr/bin/install -b -B .base -S -v /usr/obj/bin/% /bin",

                // Install new /sbin
                // ls -1 /usr/obj/bin | xargs -n1 -I% ls -1 /sbin/% | & grep -v No | cut -d '/' -f 3
                "/bin/echo \
                     mknod \
                 | /usr/bin/xargs -n1 -I% \
                     /usr/bin/install -b -B .base -S -v /usr/obj/bin/% /sbin/%",

                // Install new /usr/bin
                // ls -1 /usr/obj/bin | xargs -n1 -I% ls -1 /usr/bin/% | & grep -v No | cut -d '/' -f 4
                "/bin/echo    \
                     basename \
                     chgrp    \
                     cksum    \
                     comm     \
                     cut      \
                     dirname  \
                     du       \
                     env      \
                     expand   \
                     factor   \
                     false    \
                     fmt      \
                     fold     \
                     groups   \
                     head     \
                     id       \
                     install  \
                     logname  \
                     mkfifo   \
                     mktemp   \
                     more     \
                     nice     \
                     nl       \
                     nohup    \
                     od       \
                     paste    \
                     pathchk  \
                     printenv \
                     printf   \
                     readlink \
                     seq      \
                     sort     \
                     split    \
                     stdbuf   \
                     sum      \
                     tail     \
                     tee      \
                     timeout  \
                     touch    \
                     tr       \
                     true     \
                     truncate \
                     tsort    \
                     tty      \
                     uname    \
                     unexpand \
                     uniq     \
                     uptime   \
                     users    \
                     wc       \
                     whoami   \
                     yes      \
                 | /usr/bin/xargs -n1 -I% \
                     /usr/bin/install /usr/obj/bin/% /usr/bin", // "-b -S -v -B .base" isn't supported

                // Install new /usr/sbin
                // ls -1 /usr/obj/bin | xargs -n1 -I% ls -1 /usr/sbin/% | & grep -v No | cut -d '/' -f 4
                "/bin/echo   \
                     chown   \
                     chroot  \
                 | /usr/bin/xargs -n1 -I% \
                     /usr/bin/install /usr/obj/bin/% /usr/sbin",  // "-b -S -v -B .base" isn't supported

                "/usr/bin/env ASSUME_ALWAYS_YES=yes /usr/local/sbin/pkg-static remove devel/cargo devel/git devel/gmake lang/rust",
            ],
        },

        { // Finishing touches on the install
            type: "shell",
            inline: [
                "/etc/periodic/weekly/310.locate || /usr/bin/true",
                "/bin/echo 'weekly_locate_enable=\"NO\"' >> /etc/periodic.conf",
            ],
        },
    ],
}
